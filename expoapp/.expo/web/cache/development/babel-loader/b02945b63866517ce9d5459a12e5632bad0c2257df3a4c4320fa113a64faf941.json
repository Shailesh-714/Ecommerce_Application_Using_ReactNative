{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport axios from \"axios\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport CustomAlert from \"../components/CustomAlert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar VerificationScreen = function VerificationScreen(_ref) {\n  var route = _ref.route;\n  var _route$params = route.params,\n    name = _route$params.name,\n    email = _route$params.email,\n    password = _route$params.password,\n    verificationCode = _route$params.verificationCode;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    userCode = _useState2[0],\n    setUserCode = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showAlert1 = _useState4[0],\n    setShowAlert1 = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showAlert2 = _useState6[0],\n    setShowAlert2 = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    errorTitle = _useState8[0],\n    setErrorTitle = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    errorMessage = _useState10[0],\n    setErrorMessage = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    errorButton = _useState12[0],\n    setErrorButton = _useState12[1];\n  var navigation = useNavigation();\n  var handleVerification = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (userCode === verificationCode) {\n        try {\n          var response = yield axios.post(\"http://192.168.2.176:3000/email-verify\", {\n            name: name,\n            email: email,\n            password: password\n          });\n          setErrorTitle(\"Success\");\n          setErrorMessage(\"Email verified Successfully! Login to Proceed\");\n          setErrorButton(\"PROCEED\");\n          setShowAlert2(true);\n        } catch (error) {\n          console.log(error);\n        }\n      } else {\n        setErrorTitle(\"Wrong Code\");\n        setErrorMessage(\"The code you entered seems to be wrong\");\n        setErrorButton(\"Retry\");\n        setShowAlert1(true);\n      }\n    });\n    return function handleVerification() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleRegister = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.post(\"http://192.168.2.176:3000/register\", {\n          name: name,\n          email: email,\n          password: password\n        });\n        var _verificationCode = response.data.verificationCode;\n        navigation.navigate(\"Verify\", {\n          name: name,\n          email: email,\n          password: password,\n          verificationCode: _verificationCode\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function handleRegister() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      backgroundColor: \"#020121\",\n      justifyContent: \"center\"\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 18,\n        color: \"white\",\n        fontWeight: \"700\",\n        marginBottom: 20\n      },\n      children: \"Verify Your Email Account\"\n    }), _jsx(Text, {\n      style: {\n        color: \"rgba(255,255,255,0.8)\",\n        width: 295,\n        textAlign: \"justify\",\n        marginVertical: 10\n      },\n      children: \"Enter the 6-digit verification code sent to your email account to proceed\"\n    }), _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        backgroundColor: \"rgba(255,255,255,0.15)\",\n        padding: 5,\n        width: 300,\n        borderRadius: 5,\n        marginTop: 10\n      },\n      children: [_jsx(MaterialCommunityIcons, {\n        name: \"key-outline\",\n        size: 24,\n        color: \"rgba(255,255,255,0.4)\",\n        style: {\n          paddingLeft: 7\n        }\n      }), _jsx(TextInput, {\n        value: userCode,\n        onChangeText: function onChangeText(text) {\n          return setUserCode(text);\n        },\n        placeholder: \"Enter your verification code\",\n        placeholderTextColor: \"rgba(255,255,255,0.4)\",\n        style: {\n          paddingLeft: 10,\n          color: \"white\",\n          width: \"100%\",\n          marginHorizontal: 10\n        }\n      })]\n    }), _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        width: 290,\n        justifyContent: \"space-between\"\n      },\n      children: [_jsx(Pressable, {\n        onPress: handleRegister,\n        children: _jsx(Text, {\n          style: {\n            color: \"#008FFF\",\n            marginVertical: 10\n          },\n          children: \"Resend code\"\n        })\n      }), _jsx(Pressable, {\n        onPress: function onPress() {\n          return navigation.navigate(\"PageNotReady\");\n        },\n        children: _jsx(Text, {\n          style: {\n            color: \"#ffffff\",\n            marginVertical: 10,\n            fontSize: 13\n          },\n          children: \"Get Help?\"\n        })\n      })]\n    }), _jsx(TouchableOpacity, {\n      onPress: handleVerification,\n      children: _jsx(LinearGradient, {\n        colors: [\"#FFAA46\", \"#2606FF\"],\n        start: {\n          x: 0,\n          y: 0\n        },\n        end: {\n          x: 1,\n          y: 1\n        },\n        style: {\n          marginTop: 25,\n          width: 150,\n          alignItems: \"center\",\n          padding: 10,\n          borderRadius: 5\n        },\n        children: _jsx(Text, {\n          style: {\n            color: \"white\",\n            fontWeight: \"700\"\n          },\n          children: \"Verify\"\n        })\n      })\n    }), _jsx(CustomAlert, {\n      visible: showAlert1,\n      title: errorTitle,\n      message: errorMessage,\n      closeButton: errorButton,\n      onClose: function onClose() {\n        setShowAlert1(false), setUserCode(\"\");\n      }\n    }), _jsx(CustomAlert, {\n      visible: showAlert2,\n      title: errorTitle,\n      message: errorMessage,\n      closeButton: errorButton,\n      onClose: function onClose() {\n        setShowAlert2(false), navigation.navigate(\"Login\");\n      }\n    })]\n  });\n};\nexport default VerificationScreen;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useState","useNavigation","axios","SafeAreaView","MaterialCommunityIcons","LinearGradient","CustomAlert","jsx","_jsx","jsxs","_jsxs","VerificationScreen","_ref","route","_route$params","params","name","email","password","verificationCode","_useState","_useState2","_slicedToArray","userCode","setUserCode","_useState3","_useState4","showAlert1","setShowAlert1","_useState5","_useState6","showAlert2","setShowAlert2","_useState7","_useState8","errorTitle","setErrorTitle","_useState9","_useState10","errorMessage","setErrorMessage","_useState11","_useState12","errorButton","setErrorButton","navigation","handleVerification","_ref2","_asyncToGenerator","response","post","error","console","log","apply","arguments","handleRegister","_ref3","data","navigate","style","flex","alignItems","backgroundColor","justifyContent","children","Text","fontSize","color","fontWeight","marginBottom","width","textAlign","marginVertical","View","flexDirection","padding","borderRadius","marginTop","size","paddingLeft","TextInput","value","onChangeText","text","placeholder","placeholderTextColor","marginHorizontal","Pressable","onPress","TouchableOpacity","colors","start","x","y","end","visible","title","message","closeButton","onClose","styles","StyleSheet","create"],"sources":["C:/Users/Sailesh/Desktop/Hubspire/react-native/expoapp/app/screens/VerificationScreen.js"],"sourcesContent":["import {\r\n  Alert,\r\n  Pressable,\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport axios from \"axios\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport CustomAlert from \"../components/CustomAlert\";\r\n\r\nconst VerificationScreen = ({ route }) => {\r\n  const { name, email, password, verificationCode } = route.params;\r\n  const [userCode, setUserCode] = useState(\"\");\r\n  const [showAlert1, setShowAlert1] = useState(false);\r\n  const [showAlert2, setShowAlert2] = useState(false);\r\n  const [errorTitle, setErrorTitle] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [errorButton, setErrorButton] = useState(\"\");\r\n  const navigation = useNavigation();\r\n  const handleVerification = async () => {\r\n    if (userCode === verificationCode) {\r\n      try {\r\n        const response = await axios.post(\r\n          \"http://192.168.2.176:3000/email-verify\",\r\n          {\r\n            name: name,\r\n            email: email,\r\n            password: password,\r\n          }\r\n        );\r\n        setErrorTitle(\"Success\");\r\n        setErrorMessage(\"Email verified Successfully! Login to Proceed\");\r\n        setErrorButton(\"PROCEED\");\r\n        setShowAlert2(true);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      setErrorTitle(\"Wrong Code\");\r\n      setErrorMessage(\"The code you entered seems to be wrong\");\r\n      setErrorButton(\"Retry\");\r\n      setShowAlert1(true);\r\n    }\r\n  };\r\n\r\n  const handleRegister = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://192.168.2.176:3000/register\", {\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n      });\r\n      const { verificationCode } = response.data;\r\n      navigation.navigate(\"Verify\", {\r\n        name,\r\n        email,\r\n        password,\r\n        verificationCode,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <SafeAreaView\r\n      style={{\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#020121\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <Text\r\n        style={{\r\n          fontSize: 18,\r\n          color: \"white\",\r\n          fontWeight: \"700\",\r\n          marginBottom: 20,\r\n        }}\r\n      >\r\n        Verify Your Email Account\r\n      </Text>\r\n      <Text\r\n        style={{\r\n          color: \"rgba(255,255,255,0.8)\",\r\n          width: 295,\r\n          textAlign: \"justify\",\r\n          marginVertical: 10,\r\n        }}\r\n      >\r\n        Enter the 6-digit verification code sent to your email account to\r\n        proceed\r\n      </Text>\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          backgroundColor: \"rgba(255,255,255,0.15)\",\r\n          padding: 5,\r\n          width: 300,\r\n          borderRadius: 5,\r\n          marginTop: 10,\r\n        }}\r\n      >\r\n        <MaterialCommunityIcons\r\n          name=\"key-outline\"\r\n          size={24}\r\n          color=\"rgba(255,255,255,0.4)\"\r\n          style={{ paddingLeft: 7 }}\r\n        />\r\n        <TextInput\r\n          value={userCode}\r\n          onChangeText={(text) => setUserCode(text)}\r\n          placeholder=\"Enter your verification code\"\r\n          placeholderTextColor={\"rgba(255,255,255,0.4)\"}\r\n          style={{\r\n            paddingLeft: 10,\r\n            color: \"white\",\r\n            width: \"100%\",\r\n            marginHorizontal: 10,\r\n          }}\r\n        />\r\n      </View>\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          width: 290,\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Pressable onPress={handleRegister}>\r\n          <Text style={{ color: \"#008FFF\", marginVertical: 10 }}>\r\n            Resend code\r\n          </Text>\r\n        </Pressable>\r\n        <Pressable onPress={() => navigation.navigate(\"PageNotReady\")}>\r\n          <Text style={{ color: \"#ffffff\", marginVertical: 10, fontSize: 13 }}>\r\n            Get Help?\r\n          </Text>\r\n        </Pressable>\r\n      </View>\r\n\r\n      <TouchableOpacity onPress={handleVerification}>\r\n        <LinearGradient\r\n          colors={[\"#FFAA46\", \"#2606FF\"]}\r\n          start={{ x: 0, y: 0 }}\r\n          end={{ x: 1, y: 1 }}\r\n          style={{\r\n            marginTop: 25,\r\n            width: 150,\r\n            alignItems: \"center\",\r\n            padding: 10,\r\n            borderRadius: 5,\r\n          }}\r\n        >\r\n          <Text style={{ color: \"white\", fontWeight: \"700\" }}>Verify</Text>\r\n        </LinearGradient>\r\n      </TouchableOpacity>\r\n      <CustomAlert\r\n        visible={showAlert1}\r\n        title={errorTitle}\r\n        message={errorMessage}\r\n        closeButton={errorButton}\r\n        onClose={() => {\r\n          setShowAlert1(false), setUserCode(\"\");\r\n        }}\r\n      />\r\n      <CustomAlert\r\n        visible={showAlert2}\r\n        title={errorTitle}\r\n        message={errorMessage}\r\n        closeButton={errorButton}\r\n        onClose={() => {\r\n          setShowAlert2(false), navigation.navigate(\"Login\");\r\n        }}\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default VerificationScreen;\r\n\r\nconst styles = StyleSheet.create({});\r\n"],"mappings":";;;;;;;;;AASA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,SAASC,sBAAsB,QAAQ,oBAAoB;AAC3D,SAASC,cAAc,QAAQ,sBAAsB;AACrD,OAAOC,WAAW;AAAkC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpD,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAAC,IAAA,EAAkB;EAAA,IAAZC,KAAK,GAAAD,IAAA,CAALC,KAAK;EACjC,IAAAC,aAAA,GAAoDD,KAAK,CAACE,MAAM;IAAxDC,IAAI,GAAAF,aAAA,CAAJE,IAAI;IAAEC,KAAK,GAAAH,aAAA,CAALG,KAAK;IAAEC,QAAQ,GAAAJ,aAAA,CAARI,QAAQ;IAAEC,gBAAgB,GAAAL,aAAA,CAAhBK,gBAAgB;EAC/C,IAAAC,SAAA,GAAgCpB,QAAQ,CAAC,EAAE,CAAC;IAAAqB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAoCzB,QAAQ,CAAC,KAAK,CAAC;IAAA0B,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA5CE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChC,IAAAG,UAAA,GAAoC7B,QAAQ,CAAC,KAAK,CAAC;IAAA8B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA5CE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChC,IAAAG,UAAA,GAAoCjC,QAAQ,CAAC,EAAE,CAAC;IAAAkC,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAAzCE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChC,IAAAG,UAAA,GAAwCrC,QAAQ,CAAC,EAAE,CAAC;IAAAsC,WAAA,GAAAhB,cAAA,CAAAe,UAAA;IAA7CE,YAAY,GAAAD,WAAA;IAAEE,eAAe,GAAAF,WAAA;EACpC,IAAAG,WAAA,GAAsCzC,QAAQ,CAAC,EAAE,CAAC;IAAA0C,WAAA,GAAApB,cAAA,CAAAmB,WAAA;IAA3CE,WAAW,GAAAD,WAAA;IAAEE,cAAc,GAAAF,WAAA;EAClC,IAAMG,UAAU,GAAG5C,aAAa,CAAC,CAAC;EAClC,IAAM6C,kBAAkB;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MACrC,IAAIzB,QAAQ,KAAKJ,gBAAgB,EAAE;QACjC,IAAI;UACF,IAAM8B,QAAQ,SAAS/C,KAAK,CAACgD,IAAI,CAC/B,wCAAwC,EACxC;YACElC,IAAI,EAAEA,IAAI;YACVC,KAAK,EAAEA,KAAK;YACZC,QAAQ,EAAEA;UACZ,CACF,CAAC;UACDkB,aAAa,CAAC,SAAS,CAAC;UACxBI,eAAe,CAAC,+CAA+C,CAAC;UAChEI,cAAc,CAAC,SAAS,CAAC;UACzBZ,aAAa,CAAC,IAAI,CAAC;QACrB,CAAC,CAAC,OAAOmB,KAAK,EAAE;UACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QACpB;MACF,CAAC,MAAM;QACLf,aAAa,CAAC,YAAY,CAAC;QAC3BI,eAAe,CAAC,wCAAwC,CAAC;QACzDI,cAAc,CAAC,OAAO,CAAC;QACvBhB,aAAa,CAAC,IAAI,CAAC;MACrB;IACF,CAAC;IAAA,gBAxBKkB,kBAAkBA,CAAA;MAAA,OAAAC,KAAA,CAAAO,KAAA,OAAAC,SAAA;IAAA;EAAA,GAwBvB;EAED,IAAMC,cAAc;IAAA,IAAAC,KAAA,GAAAT,iBAAA,CAAG,aAAY;MACjC,IAAI;QACF,IAAMC,QAAQ,SAAS/C,KAAK,CAACgD,IAAI,CAAC,oCAAoC,EAAE;UACtElC,IAAI,EAAEA,IAAI;UACVC,KAAK,EAAEA,KAAK;UACZC,QAAQ,EAAEA;QACZ,CAAC,CAAC;QACF,IAAQC,iBAAgB,GAAK8B,QAAQ,CAACS,IAAI,CAAlCvC,gBAAgB;QACxB0B,UAAU,CAACc,QAAQ,CAAC,QAAQ,EAAE;UAC5B3C,IAAI,EAAJA,IAAI;UACJC,KAAK,EAALA,KAAK;UACLC,QAAQ,EAARA,QAAQ;UACRC,gBAAgB,EAAhBA;QACF,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOgC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IAAA,gBAjBKK,cAAcA,CAAA;MAAA,OAAAC,KAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;EAAA,GAiBnB;EACD,OACE7C,KAAA,CAACP,YAAY;IACXyD,KAAK,EAAE;MACLC,IAAI,EAAE,CAAC;MACPC,UAAU,EAAE,QAAQ;MACpBC,eAAe,EAAE,SAAS;MAC1BC,cAAc,EAAE;IAClB,CAAE;IAAAC,QAAA,GAEFzD,IAAA,CAAC0D,IAAI;MACHN,KAAK,EAAE;QACLO,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,OAAO;QACdC,UAAU,EAAE,KAAK;QACjBC,YAAY,EAAE;MAChB,CAAE;MAAAL,QAAA,EACH;IAED,CAAM,CAAC,EACPzD,IAAA,CAAC0D,IAAI;MACHN,KAAK,EAAE;QACLQ,KAAK,EAAE,uBAAuB;QAC9BG,KAAK,EAAE,GAAG;QACVC,SAAS,EAAE,SAAS;QACpBC,cAAc,EAAE;MAClB,CAAE;MAAAR,QAAA,EACH;IAGD,CAAM,CAAC,EACPvD,KAAA,CAACgE,IAAI;MACHd,KAAK,EAAE;QACLe,aAAa,EAAE,KAAK;QACpBb,UAAU,EAAE,QAAQ;QACpBC,eAAe,EAAE,wBAAwB;QACzCa,OAAO,EAAE,CAAC;QACVL,KAAK,EAAE,GAAG;QACVM,YAAY,EAAE,CAAC;QACfC,SAAS,EAAE;MACb,CAAE;MAAAb,QAAA,GAEFzD,IAAA,CAACJ,sBAAsB;QACrBY,IAAI,EAAC,aAAa;QAClB+D,IAAI,EAAE,EAAG;QACTX,KAAK,EAAC,uBAAuB;QAC7BR,KAAK,EAAE;UAAEoB,WAAW,EAAE;QAAE;MAAE,CAC3B,CAAC,EACFxE,IAAA,CAACyE,SAAS;QACRC,KAAK,EAAE3D,QAAS;QAChB4D,YAAY,EAAE,SAAAA,aAACC,IAAI;UAAA,OAAK5D,WAAW,CAAC4D,IAAI,CAAC;QAAA,CAAC;QAC1CC,WAAW,EAAC,8BAA8B;QAC1CC,oBAAoB,EAAE,uBAAwB;QAC9C1B,KAAK,EAAE;UACLoB,WAAW,EAAE,EAAE;UACfZ,KAAK,EAAE,OAAO;UACdG,KAAK,EAAE,MAAM;UACbgB,gBAAgB,EAAE;QACpB;MAAE,CACH,CAAC;IAAA,CACE,CAAC,EACP7E,KAAA,CAACgE,IAAI;MACHd,KAAK,EAAE;QACLe,aAAa,EAAE,KAAK;QACpBJ,KAAK,EAAE,GAAG;QACVP,cAAc,EAAE;MAClB,CAAE;MAAAC,QAAA,GAEFzD,IAAA,CAACgF,SAAS;QAACC,OAAO,EAAEjC,cAAe;QAAAS,QAAA,EACjCzD,IAAA,CAAC0D,IAAI;UAACN,KAAK,EAAE;YAAEQ,KAAK,EAAE,SAAS;YAAEK,cAAc,EAAE;UAAG,CAAE;UAAAR,QAAA,EAAC;QAEvD,CAAM;MAAC,CACE,CAAC,EACZzD,IAAA,CAACgF,SAAS;QAACC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAM5C,UAAU,CAACc,QAAQ,CAAC,cAAc,CAAC;QAAA,CAAC;QAAAM,QAAA,EAC5DzD,IAAA,CAAC0D,IAAI;UAACN,KAAK,EAAE;YAAEQ,KAAK,EAAE,SAAS;YAAEK,cAAc,EAAE,EAAE;YAAEN,QAAQ,EAAE;UAAG,CAAE;UAAAF,QAAA,EAAC;QAErE,CAAM;MAAC,CACE,CAAC;IAAA,CACR,CAAC,EAEPzD,IAAA,CAACkF,gBAAgB;MAACD,OAAO,EAAE3C,kBAAmB;MAAAmB,QAAA,EAC5CzD,IAAA,CAACH,cAAc;QACbsF,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAE;QAC/BC,KAAK,EAAE;UAAEC,CAAC,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAE,CAAE;QACtBC,GAAG,EAAE;UAAEF,CAAC,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAE,CAAE;QACpBlC,KAAK,EAAE;UACLkB,SAAS,EAAE,EAAE;UACbP,KAAK,EAAE,GAAG;UACVT,UAAU,EAAE,QAAQ;UACpBc,OAAO,EAAE,EAAE;UACXC,YAAY,EAAE;QAChB,CAAE;QAAAZ,QAAA,EAEFzD,IAAA,CAAC0D,IAAI;UAACN,KAAK,EAAE;YAAEQ,KAAK,EAAE,OAAO;YAAEC,UAAU,EAAE;UAAM,CAAE;UAAAJ,QAAA,EAAC;QAAM,CAAM;MAAC,CACnD;IAAC,CACD,CAAC,EACnBzD,IAAA,CAACF,WAAW;MACV0F,OAAO,EAAErE,UAAW;MACpBsE,KAAK,EAAE9D,UAAW;MAClB+D,OAAO,EAAE3D,YAAa;MACtB4D,WAAW,EAAExD,WAAY;MACzByD,OAAO,EAAE,SAAAA,QAAA,EAAM;QACbxE,aAAa,CAAC,KAAK,CAAC,EAAEJ,WAAW,CAAC,EAAE,CAAC;MACvC;IAAE,CACH,CAAC,EACFhB,IAAA,CAACF,WAAW;MACV0F,OAAO,EAAEjE,UAAW;MACpBkE,KAAK,EAAE9D,UAAW;MAClB+D,OAAO,EAAE3D,YAAa;MACtB4D,WAAW,EAAExD,WAAY;MACzByD,OAAO,EAAE,SAAAA,QAAA,EAAM;QACbpE,aAAa,CAAC,KAAK,CAAC,EAAEa,UAAU,CAACc,QAAQ,CAAC,OAAO,CAAC;MACpD;IAAE,CACH,CAAC;EAAA,CACU,CAAC;AAEnB,CAAC;AAED,eAAehD,kBAAkB;AAEjC,IAAM0F,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}