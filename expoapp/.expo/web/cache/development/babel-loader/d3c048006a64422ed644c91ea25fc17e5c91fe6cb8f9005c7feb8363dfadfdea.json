{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StepIndicator from \"react-native-step-indicator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProgressBar = function ProgressBar() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentStep = _useState2[0],\n    setCurrentStep = _useState2[1];\n  var labels = [\"Step 1\", \"Step 2\", \"Step 3\", \"Step 4\"];\n  var nextStep = function nextStep() {\n    setCurrentStep(currentStep + 1);\n  };\n  var prevStep = function prevStep() {\n    setCurrentStep(currentStep - 1);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StepIndicator, {\n      stepCount: labels.length,\n      currentPosition: currentStep,\n      labels: labels,\n      customStyles: customStyles\n    }), _jsxs(Text, {\n      style: styles.stepText,\n      children: [\"Current Step: \", labels[currentStep]]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(Button, {\n        title: \"Previous\",\n        onPress: prevStep,\n        disabled: currentStep === 0\n      }), _jsx(Button, {\n        title: \"Next\",\n        onPress: nextStep,\n        disabled: currentStep === labels.length - 1\n      })]\n    })]\n  });\n};\nvar customStyles = {\n  stepIndicatorSize: 30,\n  currentStepIndicatorSize: 35,\n  separatorStrokeWidth: 2,\n  currentStepStrokeWidth: 3,\n  stepStrokeCurrentColor: \"#007AFF\",\n  stepStrokeWidth: 3,\n  stepStrokeFinishedColor: \"#007AFF\",\n  stepStrokeUnFinishedColor: \"#CCCCCC\",\n  separatorFinishedColor: \"#007AFF\",\n  separatorUnFinishedColor: \"#CCCCCC\",\n  stepIndicatorFinishedColor: \"#007AFF\",\n  stepIndicatorUnFinishedColor: \"#CCCCCC\",\n  stepIndicatorCurrentColor: \"#007AFF\",\n  stepIndicatorLabelFontSize: 13,\n  currentStepIndicatorLabelFontSize: 13,\n  stepIndicatorLabelCurrentColor: \"#FFFFFF\",\n  stepIndicatorLabelFinishedColor: \"#FFFFFF\",\n  stepIndicatorLabelUnFinishedColor: \"#000000\"\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingHorizontal: 20\n  },\n  stepText: {\n    marginTop: 20,\n    fontSize: 18\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginTop: 20\n  }\n});\nexport default ProgressBar;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","Button","StepIndicator","jsx","_jsx","jsxs","_jsxs","ProgressBar","_useState","_useState2","_slicedToArray","currentStep","setCurrentStep","labels","nextStep","prevStep","style","styles","container","children","stepCount","length","currentPosition","customStyles","stepText","buttonContainer","title","onPress","disabled","stepIndicatorSize","currentStepIndicatorSize","separatorStrokeWidth","currentStepStrokeWidth","stepStrokeCurrentColor","stepStrokeWidth","stepStrokeFinishedColor","stepStrokeUnFinishedColor","separatorFinishedColor","separatorUnFinishedColor","stepIndicatorFinishedColor","stepIndicatorUnFinishedColor","stepIndicatorCurrentColor","stepIndicatorLabelFontSize","currentStepIndicatorLabelFontSize","stepIndicatorLabelCurrentColor","stepIndicatorLabelFinishedColor","stepIndicatorLabelUnFinishedColor","create","flex","justifyContent","alignItems","paddingHorizontal","marginTop","fontSize","flexDirection"],"sources":["C:/Users/Sailesh/Desktop/Hubspire/react-native/expoapp/app/screens/ProgressBar.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, StyleSheet, Button } from \"react-native\";\r\nimport StepIndicator from \"react-native-step-indicator\";\r\n\r\nconst ProgressBar = () => {\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const labels = [\"Step 1\", \"Step 2\", \"Step 3\", \"Step 4\"];\r\n\r\n  const nextStep = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const prevStep = () => {\r\n    setCurrentStep(currentStep - 1);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <StepIndicator\r\n        stepCount={labels.length}\r\n        currentPosition={currentStep}\r\n        labels={labels}\r\n        customStyles={customStyles}\r\n      />\r\n      <Text style={styles.stepText}>Current Step: {labels[currentStep]}</Text>\r\n      <View style={styles.buttonContainer}>\r\n        <Button\r\n          title=\"Previous\"\r\n          onPress={prevStep}\r\n          disabled={currentStep === 0}\r\n        />\r\n        <Button\r\n          title=\"Next\"\r\n          onPress={nextStep}\r\n          disabled={currentStep === labels.length - 1}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  stepIndicatorSize: 30,\r\n  currentStepIndicatorSize: 35,\r\n  separatorStrokeWidth: 2,\r\n  currentStepStrokeWidth: 3,\r\n  stepStrokeCurrentColor: \"#007AFF\", // Blue color for current step\r\n  stepStrokeWidth: 3,\r\n  stepStrokeFinishedColor: \"#007AFF\", // Blue color for finished steps\r\n  stepStrokeUnFinishedColor: \"#CCCCCC\", // Gray color for unfinished steps\r\n  separatorFinishedColor: \"#007AFF\", // Blue color for finished separators\r\n  separatorUnFinishedColor: \"#CCCCCC\", // Gray color for unfinished separators\r\n  stepIndicatorFinishedColor: \"#007AFF\", // Blue color for finished step indicators\r\n  stepIndicatorUnFinishedColor: \"#CCCCCC\", // Gray color for unfinished step indicators\r\n  stepIndicatorCurrentColor: \"#007AFF\", // Blue color for current step indicator\r\n  stepIndicatorLabelFontSize: 13,\r\n  currentStepIndicatorLabelFontSize: 13,\r\n  stepIndicatorLabelCurrentColor: \"#FFFFFF\", // White color for current step indicator label\r\n  stepIndicatorLabelFinishedColor: \"#FFFFFF\", // White color for finished step indicator label\r\n  stepIndicatorLabelUnFinishedColor: \"#000000\", // Black color for unfinished step indicator label\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 20,\r\n  },\r\n  stepText: {\r\n    marginTop: 20,\r\n    fontSize: 18,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 20,\r\n  },\r\n});\r\n\r\nexport default ProgressBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}