{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { ProgressViewIOS } from \"react-native-web/dist/index\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ProgressBarAndroid from \"@react-native-community/progress-bar-android\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CartScreen = function CartScreen(_ref) {\n  var onNext = _ref.onNext;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: \"Cart Screen\"\n    }), _jsx(Button, {\n      title: \"Next\",\n      onPress: onNext\n    })]\n  });\n};\nvar AddressScreen = function AddressScreen(_ref2) {\n  var onNext = _ref2.onNext,\n    onPrev = _ref2.onPrev;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: \"Address Screen\"\n    }), _jsx(Button, {\n      title: \"Next\",\n      onPress: onNext\n    }), _jsx(Button, {\n      title: \"Previous\",\n      onPress: onPrev\n    })]\n  });\n};\nvar PaymentScreen = function PaymentScreen(_ref3) {\n  var onNext = _ref3.onNext,\n    onPrev = _ref3.onPrev;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: \"Payment Screen\"\n    }), _jsx(Button, {\n      title: \"Next\",\n      onPress: onNext\n    }), _jsx(Button, {\n      title: \"Previous\",\n      onPress: onPrev\n    })]\n  });\n};\nvar ConfirmOrderScreen = function ConfirmOrderScreen(_ref4) {\n  var onPrev = _ref4.onPrev;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: \"Confirm Order Screen\"\n    }), _jsx(Button, {\n      title: \"Previous\",\n      onPress: onPrev\n    })]\n  });\n};\nvar ProgressBar = function ProgressBar() {\n  var _useState = useState(1),\n    _useState2 = _slicedToArray(_useState, 2),\n    stage = _useState2[0],\n    setStage = _useState2[1];\n  var totalStages = 4;\n  var nextStage = function nextStage() {\n    if (stage < totalStages) {\n      setStage(stage + 1);\n    }\n  };\n  var prevStage = function prevStage() {\n    if (stage > 1) {\n      setStage(stage - 1);\n    }\n  };\n  var currentScreen;\n  switch (stage) {\n    case 1:\n      currentScreen = _jsx(CartScreen, {\n        onNext: nextStage\n      });\n      break;\n    case 2:\n      currentScreen = _jsx(AddressScreen, {\n        onNext: nextStage,\n        onPrev: prevStage\n      });\n      break;\n    case 3:\n      currentScreen = _jsx(PaymentScreen, {\n        onNext: nextStage,\n        onPrev: prevStage\n      });\n      break;\n    case 4:\n      currentScreen = _jsx(ConfirmOrderScreen, {\n        onPrev: prevStage\n      });\n      break;\n    default:\n      currentScreen = null;\n  }\n  var progress = (stage - 1) / (totalStages - 1);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Text, {\n      style: styles.text,\n      children: [\"Current Stage: \", stage]\n    }), Platform.OS === \"android\" ? _jsx(ProgressBarAndroid, {\n      styleAttr: \"Horizontal\",\n      indeterminate: false,\n      progress: progress,\n      color: \"#00FF00\"\n    }) : _jsx(ProgressViewIOS, {\n      progress: progress,\n      progressTintColor: \"#00FF00\"\n    }), currentScreen]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 20\n  },\n  text: {\n    marginBottom: 20,\n    fontSize: 18\n  }\n});\nexport default ProgressBar;","map":{"version":3,"names":["React","useState","View","Text","Platform","ProgressViewIOS","Button","StyleSheet","ProgressBarAndroid","jsx","_jsx","jsxs","_jsxs","CartScreen","_ref","onNext","style","styles","container","children","text","title","onPress","AddressScreen","_ref2","onPrev","PaymentScreen","_ref3","ConfirmOrderScreen","_ref4","ProgressBar","_useState","_useState2","_slicedToArray","stage","setStage","totalStages","nextStage","prevStage","currentScreen","progress","OS","styleAttr","indeterminate","color","progressTintColor","create","flex","justifyContent","alignItems","padding","marginBottom","fontSize"],"sources":["C:/Users/Sailesh/Desktop/Hubspire/react-native/expoapp/app/screens/ProgressBar.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Platform,\r\n  ProgressViewIOS,\r\n  Button,\r\n  StyleSheet,\r\n} from \"react-native\";\r\nimport ProgressBarAndroid from \"@react-native-community/progress-bar-android\";\r\n\r\n// Define separate components for each stage (Cart, Address, Payment, ConfirmOrder)\r\nconst CartScreen = ({ onNext }) => (\r\n  <View style={styles.container}>\r\n    <Text style={styles.text}>Cart Screen</Text>\r\n    <Button title=\"Next\" onPress={onNext} />\r\n  </View>\r\n);\r\n\r\nconst AddressScreen = ({ onNext, onPrev }) => (\r\n  <View style={styles.container}>\r\n    <Text style={styles.text}>Address Screen</Text>\r\n    <Button title=\"Next\" onPress={onNext} />\r\n    <Button title=\"Previous\" onPress={onPrev} />\r\n  </View>\r\n);\r\n\r\nconst PaymentScreen = ({ onNext, onPrev }) => (\r\n  <View style={styles.container}>\r\n    <Text style={styles.text}>Payment Screen</Text>\r\n    <Button title=\"Next\" onPress={onNext} />\r\n    <Button title=\"Previous\" onPress={onPrev} />\r\n  </View>\r\n);\r\n\r\nconst ConfirmOrderScreen = ({ onPrev }) => (\r\n  <View style={styles.container}>\r\n    <Text style={styles.text}>Confirm Order Screen</Text>\r\n    <Button title=\"Previous\" onPress={onPrev} />\r\n  </View>\r\n);\r\n\r\nconst ProgressBar = () => {\r\n  const [stage, setStage] = useState(1); // Initial stage\r\n  const totalStages = 4; // Total number of stages\r\n\r\n  // Function to move to the next stage\r\n  const nextStage = () => {\r\n    if (stage < totalStages) {\r\n      setStage(stage + 1);\r\n    }\r\n  };\r\n\r\n  // Function to move to the previous stage\r\n  const prevStage = () => {\r\n    if (stage > 1) {\r\n      setStage(stage - 1);\r\n    }\r\n  };\r\n\r\n  // Define component based on current stage\r\n  let currentScreen;\r\n  switch (stage) {\r\n    case 1:\r\n      currentScreen = <CartScreen onNext={nextStage} />;\r\n      break;\r\n    case 2:\r\n      currentScreen = <AddressScreen onNext={nextStage} onPrev={prevStage} />;\r\n      break;\r\n    case 3:\r\n      currentScreen = <PaymentScreen onNext={nextStage} onPrev={prevStage} />;\r\n      break;\r\n    case 4:\r\n      currentScreen = <ConfirmOrderScreen onPrev={prevStage} />;\r\n      break;\r\n    default:\r\n      currentScreen = null;\r\n  }\r\n\r\n  // Calculate progress based on current stage\r\n  const progress = (stage - 1) / (totalStages - 1);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.text}>Current Stage: {stage}</Text>\r\n      {Platform.OS === \"android\" ? (\r\n        <ProgressBarAndroid\r\n          styleAttr=\"Horizontal\"\r\n          indeterminate={false}\r\n          progress={progress}\r\n          color=\"#00FF00\" // Green color for the progress bar\r\n        />\r\n      ) : (\r\n        <ProgressViewIOS progress={progress} progressTintColor=\"#00FF00\" />\r\n      )}\r\n      {currentScreen}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: 20,\r\n  },\r\n  text: {\r\n    marginBottom: 20,\r\n    fontSize: 18,\r\n  },\r\n});\r\n\r\nexport default ProgressBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}