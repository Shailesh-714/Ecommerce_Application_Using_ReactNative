{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nvar STEP_STATUS = {\n  CURRENT: 'current',\n  FINISHED: 'finished',\n  UNFINISHED: 'unfinished'\n};\nvar defaultStyles = {\n  stepIndicatorSize: 30,\n  currentStepIndicatorSize: 40,\n  separatorStrokeWidth: 3,\n  separatorStrokeUnfinishedWidth: 0,\n  separatorStrokeFinishedWidth: 0,\n  currentStepStrokeWidth: 5,\n  stepStrokeWidth: 0,\n  stepStrokeCurrentColor: '#4aae4f',\n  stepStrokeFinishedColor: '#4aae4f',\n  stepStrokeUnFinishedColor: '#4aae4f',\n  separatorFinishedColor: '#4aae4f',\n  separatorUnFinishedColor: '#a4d4a5',\n  stepIndicatorFinishedColor: '#4aae4f',\n  stepIndicatorUnFinishedColor: '#a4d4a5',\n  stepIndicatorCurrentColor: '#ffffff',\n  stepIndicatorLabelFontSize: 15,\n  currentStepIndicatorLabelFontSize: 15,\n  stepIndicatorLabelCurrentColor: '#000000',\n  stepIndicatorLabelFinishedColor: '#ffffff',\n  stepIndicatorLabelUnFinishedColor: 'rgba(255,255,255,0.5)',\n  labelColor: '#000000',\n  labelSize: 13,\n  labelAlign: 'center',\n  currentStepLabelColor: '#4aae4f'\n};\nvar StepIndicator = function StepIndicator(_ref) {\n  var _ref$currentPosition = _ref.currentPosition,\n    currentPosition = _ref$currentPosition === void 0 ? 0 : _ref$currentPosition,\n    _ref$stepCount = _ref.stepCount,\n    stepCount = _ref$stepCount === void 0 ? 5 : _ref$stepCount,\n    _ref$direction = _ref.direction,\n    direction = _ref$direction === void 0 ? 'horizontal' : _ref$direction,\n    _ref$customStyles = _ref.customStyles,\n    customStylesFromProps = _ref$customStyles === void 0 ? defaultStyles : _ref$customStyles,\n    _ref$labels = _ref.labels,\n    labels = _ref$labels === void 0 ? [] : _ref$labels,\n    onPress = _ref.onPress,\n    renderCustomStepIndicator = _ref.renderStepIndicator,\n    renderLabel = _ref.renderLabel;\n  var _React$useState = React.useState(0),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    width = _React$useState2[0],\n    setWidth = _React$useState2[1];\n  var _React$useState3 = React.useState(0),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    height = _React$useState4[0],\n    setHeight = _React$useState4[1];\n  var _React$useState5 = React.useState(0),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    progressBarSize = _React$useState6[0],\n    setProgressBarSize = _React$useState6[1];\n  var _React$useState7 = React.useState(_objectSpread(_objectSpread({}, defaultStyles), customStylesFromProps)),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    customStyles = _React$useState8[0],\n    setCustomStyles = _React$useState8[1];\n  var progressAnim = React.useRef(new Animated.Value(0)).current;\n  var sizeAnim = React.useRef(new Animated.Value(customStyles.stepIndicatorSize)).current;\n  var staleSizeAnim = React.useRef(new Animated.Value(customStyles.stepIndicatorSize)).current;\n  var borderRadiusAnim = React.useRef(new Animated.Value(customStyles.stepIndicatorSize / 2)).current;\n  var stepPressed = function stepPressed(position) {\n    if (onPress) {\n      onPress(position);\n    }\n  };\n  var effectCustomStyles = function effectCustomStyles() {\n    setCustomStyles(_objectSpread(_objectSpread({}, customStyles), customStylesFromProps));\n  };\n  React.useEffect(effectCustomStyles, [customStylesFromProps]);\n  var effectCurrentPosition = function effectCurrentPosition() {\n    onCurrentPositionChanged(currentPosition);\n  };\n  React.useEffect(effectCurrentPosition, [currentPosition, progressBarSize]);\n  var renderProgressBarBackground = function renderProgressBarBackground() {\n    var progressBarBackgroundStyle = {\n      backgroundColor: customStyles.separatorUnFinishedColor,\n      position: 'absolute'\n    };\n    if (direction === 'vertical') {\n      progressBarBackgroundStyle = _objectSpread(_objectSpread({}, progressBarBackgroundStyle), {}, {\n        left: (width - customStyles.separatorStrokeWidth) / 2,\n        top: height / (2 * stepCount),\n        bottom: height / (2 * stepCount),\n        width: customStyles.separatorStrokeUnfinishedWidth === 0 ? customStyles.separatorStrokeWidth : customStyles.separatorStrokeUnfinishedWidth\n      });\n    } else {\n      progressBarBackgroundStyle = _objectSpread(_objectSpread({}, progressBarBackgroundStyle), {}, {\n        top: (height - customStyles.separatorStrokeWidth) / 2,\n        left: width / (2 * stepCount),\n        right: width / (2 * stepCount),\n        height: customStyles.separatorStrokeUnfinishedWidth === 0 ? customStyles.separatorStrokeWidth : customStyles.separatorStrokeUnfinishedWidth\n      });\n    }\n    return React.createElement(View, {\n      onLayout: function onLayout(event) {\n        if (direction === 'vertical') {\n          setProgressBarSize(event.nativeEvent.layout.height);\n        } else {\n          setProgressBarSize(event.nativeEvent.layout.width);\n        }\n      },\n      style: progressBarBackgroundStyle\n    });\n  };\n  var renderProgressBar = function renderProgressBar() {\n    var progressBarStyle = {\n      backgroundColor: customStyles.separatorFinishedColor,\n      position: 'absolute'\n    };\n    if (direction === 'vertical') {\n      progressBarStyle = _objectSpread(_objectSpread({}, progressBarStyle), {}, {\n        left: (width - customStyles.separatorStrokeWidth) / 2,\n        top: height / (2 * stepCount),\n        bottom: height / (2 * stepCount),\n        width: customStyles.separatorStrokeFinishedWidth === 0 ? customStyles.separatorStrokeWidth : customStyles.separatorStrokeFinishedWidth,\n        height: progressAnim\n      });\n    } else {\n      progressBarStyle = _objectSpread(_objectSpread({}, progressBarStyle), {}, {\n        top: (height - customStyles.separatorStrokeWidth) / 2,\n        left: width / (2 * stepCount),\n        right: width / (2 * stepCount),\n        height: customStyles.separatorStrokeFinishedWidth === 0 ? customStyles.separatorStrokeWidth : customStyles.separatorStrokeFinishedWidth,\n        width: progressAnim\n      });\n    }\n    return React.createElement(Animated.View, {\n      style: progressBarStyle\n    });\n  };\n  var renderStepIndicator = function renderStepIndicator() {\n    var steps = [];\n    var _loop = function _loop(position) {\n      steps.push(React.createElement(TouchableWithoutFeedback, {\n        key: position,\n        onPress: function onPress() {\n          return stepPressed(position);\n        }\n      }, React.createElement(View, {\n        style: [styles.stepContainer, direction === 'vertical' ? {\n          flexDirection: 'column'\n        } : {\n          flexDirection: 'row'\n        }]\n      }, renderStep(position))));\n    };\n    for (var position = 0; position < stepCount; position++) {\n      _loop(position);\n    }\n    return React.createElement(View, {\n      onLayout: function onLayout(event) {\n        setWidth(event.nativeEvent.layout.width);\n        setHeight(event.nativeEvent.layout.height);\n      },\n      style: [styles.stepIndicatorContainer, direction === 'vertical' ? {\n        flexDirection: 'column',\n        width: customStyles.currentStepIndicatorSize\n      } : {\n        flexDirection: 'row',\n        height: customStyles.currentStepIndicatorSize\n      }]\n    }, steps);\n  };\n  var renderStepLabels = function renderStepLabels() {\n    if (!labels || labels.length === 0) {\n      return;\n    }\n    var labelViews = labels.map(function (label, index) {\n      var selectedStepLabelStyle = index === currentPosition ? {\n        color: customStyles.currentStepLabelColor\n      } : {\n        color: customStyles.labelColor\n      };\n      return React.createElement(TouchableWithoutFeedback, {\n        style: styles.stepLabelItem,\n        key: index,\n        onPress: function onPress() {\n          return stepPressed(index);\n        }\n      }, React.createElement(View, {\n        style: styles.stepLabelItem\n      }, renderLabel ? renderLabel({\n        position: index,\n        stepStatus: getStepStatus(index),\n        label: label,\n        currentPosition: currentPosition\n      }) : React.createElement(Text, {\n        style: [styles.stepLabel, selectedStepLabelStyle, {\n          fontSize: customStyles.labelSize,\n          fontFamily: customStyles.labelFontFamily\n        }]\n      }, label)));\n    });\n    return React.createElement(View, {\n      style: [styles.stepLabelsContainer, direction === 'vertical' ? {\n        flexDirection: 'column',\n        paddingHorizontal: 4\n      } : {\n        flexDirection: 'row',\n        paddingVertical: 4\n      }, {\n        alignItems: customStyles.labelAlign\n      }]\n    }, labelViews);\n  };\n  var renderStep = function renderStep(position) {\n    var stepStyle;\n    var indicatorLabelStyle = {};\n    switch (getStepStatus(position)) {\n      case STEP_STATUS.CURRENT:\n        {\n          stepStyle = {\n            backgroundColor: customStyles.stepIndicatorCurrentColor,\n            borderWidth: customStyles.currentStepStrokeWidth,\n            borderColor: customStyles.stepStrokeCurrentColor,\n            height: sizeAnim,\n            width: sizeAnim,\n            borderRadius: borderRadiusAnim,\n            overflow: 'hidden'\n          };\n          indicatorLabelStyle = {\n            overflow: 'hidden',\n            fontSize: customStyles.currentStepIndicatorLabelFontSize,\n            color: customStyles.stepIndicatorLabelCurrentColor\n          };\n          break;\n        }\n      case STEP_STATUS.FINISHED:\n        {\n          stepStyle = {\n            backgroundColor: customStyles.stepIndicatorFinishedColor,\n            borderWidth: customStyles.stepStrokeWidth,\n            borderColor: customStyles.stepStrokeFinishedColor,\n            height: staleSizeAnim,\n            width: staleSizeAnim,\n            borderRadius: customStyles.stepIndicatorSize / 2,\n            overflow: 'hidden'\n          };\n          indicatorLabelStyle = {\n            overflow: 'hidden',\n            fontSize: customStyles.stepIndicatorLabelFontSize,\n            color: customStyles.stepIndicatorLabelFinishedColor\n          };\n          break;\n        }\n      case STEP_STATUS.UNFINISHED:\n        {\n          stepStyle = {\n            backgroundColor: customStyles.stepIndicatorUnFinishedColor,\n            borderWidth: customStyles.stepStrokeWidth,\n            borderColor: customStyles.stepStrokeUnFinishedColor,\n            height: staleSizeAnim,\n            width: staleSizeAnim,\n            borderRadius: customStyles.stepIndicatorSize / 2,\n            overflow: 'hidden'\n          };\n          indicatorLabelStyle = {\n            overflow: 'hidden',\n            fontSize: customStyles.stepIndicatorLabelFontSize,\n            color: customStyles.stepIndicatorLabelUnFinishedColor\n          };\n          break;\n        }\n      default:\n    }\n    return React.createElement(Animated.View, {\n      key: 'step-indicator',\n      style: [styles.step, stepStyle]\n    }, renderCustomStepIndicator ? renderCustomStepIndicator({\n      position: position,\n      stepStatus: getStepStatus(position)\n    }) : React.createElement(Text, {\n      style: indicatorLabelStyle\n    }, \"\".concat(position + 1)));\n  };\n  var getStepStatus = function getStepStatus(stepPosition) {\n    if (stepPosition === currentPosition) {\n      return STEP_STATUS.CURRENT;\n    } else if (stepPosition < currentPosition) {\n      return STEP_STATUS.FINISHED;\n    } else {\n      return STEP_STATUS.UNFINISHED;\n    }\n  };\n  var onCurrentPositionChanged = function onCurrentPositionChanged(position) {\n    if (position > stepCount - 1) {\n      position = stepCount - 1;\n    }\n    var animateToPosition = progressBarSize / (stepCount - 1) * position;\n    sizeAnim.setValue(customStyles.stepIndicatorSize);\n    staleSizeAnim.setValue(customStyles.stepIndicatorSize);\n    borderRadiusAnim.setValue(customStyles.stepIndicatorSize / 2);\n    Animated.sequence([Animated.timing(progressAnim, {\n      toValue: isNaN(animateToPosition) ? 0 : animateToPosition,\n      duration: 200,\n      useNativeDriver: false\n    }), Animated.parallel([Animated.timing(sizeAnim, {\n      toValue: customStyles.currentStepIndicatorSize,\n      duration: 100,\n      useNativeDriver: false\n    }), Animated.timing(borderRadiusAnim, {\n      toValue: customStyles.currentStepIndicatorSize / 2,\n      duration: 100,\n      useNativeDriver: false\n    })])]).start();\n  };\n  return React.createElement(View, {\n    style: [styles.container, direction === 'vertical' ? {\n      flexDirection: 'row',\n      flex: 1\n    } : {\n      flexDirection: 'column'\n    }]\n  }, width !== 0 && React.createElement(React.Fragment, null, renderProgressBarBackground(), renderProgressBar()), renderStepIndicator(), labels && renderStepLabels());\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'rgba(1,0,0,0)'\n  },\n  stepIndicatorContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    backgroundColor: 'rgba(1,0,0,0)'\n  },\n  stepLabelsContainer: {\n    justifyContent: 'space-around'\n  },\n  step: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 2\n  },\n  stepContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  stepLabel: {\n    fontSize: 12,\n    textAlign: 'center',\n    fontWeight: '500'\n  },\n  stepLabelItem: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default React.memo(StepIndicator);","map":{"version":3,"names":["React","View","Text","StyleSheet","Animated","TouchableWithoutFeedback","STEP_STATUS","CURRENT","FINISHED","UNFINISHED","defaultStyles","stepIndicatorSize","currentStepIndicatorSize","separatorStrokeWidth","separatorStrokeUnfinishedWidth","separatorStrokeFinishedWidth","currentStepStrokeWidth","stepStrokeWidth","stepStrokeCurrentColor","stepStrokeFinishedColor","stepStrokeUnFinishedColor","separatorFinishedColor","separatorUnFinishedColor","stepIndicatorFinishedColor","stepIndicatorUnFinishedColor","stepIndicatorCurrentColor","stepIndicatorLabelFontSize","currentStepIndicatorLabelFontSize","stepIndicatorLabelCurrentColor","stepIndicatorLabelFinishedColor","stepIndicatorLabelUnFinishedColor","labelColor","labelSize","labelAlign","currentStepLabelColor","StepIndicator","_ref","_ref$currentPosition","currentPosition","_ref$stepCount","stepCount","_ref$direction","direction","_ref$customStyles","customStyles","customStylesFromProps","_ref$labels","labels","onPress","renderCustomStepIndicator","renderStepIndicator","renderLabel","_React$useState","useState","_React$useState2","_slicedToArray","width","setWidth","_React$useState3","_React$useState4","height","setHeight","_React$useState5","_React$useState6","progressBarSize","setProgressBarSize","_React$useState7","_objectSpread","_React$useState8","setCustomStyles","progressAnim","useRef","Value","current","sizeAnim","staleSizeAnim","borderRadiusAnim","stepPressed","position","effectCustomStyles","useEffect","effectCurrentPosition","onCurrentPositionChanged","renderProgressBarBackground","progressBarBackgroundStyle","backgroundColor","left","top","bottom","right","createElement","onLayout","event","nativeEvent","layout","style","renderProgressBar","progressBarStyle","steps","_loop","push","key","styles","stepContainer","flexDirection","renderStep","stepIndicatorContainer","renderStepLabels","length","labelViews","map","label","index","selectedStepLabelStyle","color","stepLabelItem","stepStatus","getStepStatus","stepLabel","fontSize","fontFamily","labelFontFamily","stepLabelsContainer","paddingHorizontal","paddingVertical","alignItems","stepStyle","indicatorLabelStyle","borderWidth","borderColor","borderRadius","overflow","step","concat","stepPosition","animateToPosition","setValue","sequence","timing","toValue","isNaN","duration","useNativeDriver","parallel","start","container","flex","Fragment","create","justifyContent","zIndex","textAlign","fontWeight","memo"],"sources":["C:\\Users\\Sailesh\\Desktop\\Hubspire\\react-native\\expoapp\\node_modules\\react-native-step-indicator\\lib\\module\\index.tsx"],"sourcesContent":["/* eslint-disable react-native/no-inline-styles */\nimport React from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Animated,\n  TouchableWithoutFeedback,\n  ViewStyle,\n  TextStyle,\n} from 'react-native';\nimport { StepIndicatorProps } from './types';\n\nconst STEP_STATUS = {\n  CURRENT: 'current',\n  FINISHED: 'finished',\n  UNFINISHED: 'unfinished',\n};\n\ninterface DefaultStepIndicatorStyles {\n  stepIndicatorSize: number;\n  currentStepIndicatorSize: number;\n  separatorStrokeWidth: number;\n  separatorStrokeUnfinishedWidth: number;\n  separatorStrokeFinishedWidth: number;\n  currentStepStrokeWidth: number;\n  stepStrokeWidth: number;\n  stepStrokeCurrentColor: string;\n  stepStrokeFinishedColor: string;\n  stepStrokeUnFinishedColor: string;\n  separatorFinishedColor: string;\n  separatorUnFinishedColor: string;\n  stepIndicatorFinishedColor: string;\n  stepIndicatorUnFinishedColor: string;\n  stepIndicatorCurrentColor: string;\n  stepIndicatorLabelFontSize: number;\n  currentStepIndicatorLabelFontSize: number;\n  stepIndicatorLabelCurrentColor: string;\n  stepIndicatorLabelFinishedColor: string;\n  stepIndicatorLabelUnFinishedColor: string;\n  labelColor: string;\n  labelSize: number;\n  labelAlign:\n    | 'center'\n    | 'flex-start'\n    | 'flex-end'\n    | 'stretch'\n    | 'baseline'\n    | undefined;\n  currentStepLabelColor: string;\n  labelFontFamily?: string;\n}\n\nconst defaultStyles: DefaultStepIndicatorStyles = {\n  stepIndicatorSize: 30,\n  currentStepIndicatorSize: 40,\n  separatorStrokeWidth: 3,\n  separatorStrokeUnfinishedWidth: 0,\n  separatorStrokeFinishedWidth: 0,\n  currentStepStrokeWidth: 5,\n  stepStrokeWidth: 0,\n  stepStrokeCurrentColor: '#4aae4f',\n  stepStrokeFinishedColor: '#4aae4f',\n  stepStrokeUnFinishedColor: '#4aae4f',\n  separatorFinishedColor: '#4aae4f',\n  separatorUnFinishedColor: '#a4d4a5',\n  stepIndicatorFinishedColor: '#4aae4f',\n  stepIndicatorUnFinishedColor: '#a4d4a5',\n  stepIndicatorCurrentColor: '#ffffff',\n  stepIndicatorLabelFontSize: 15,\n  currentStepIndicatorLabelFontSize: 15,\n  stepIndicatorLabelCurrentColor: '#000000',\n  stepIndicatorLabelFinishedColor: '#ffffff',\n  stepIndicatorLabelUnFinishedColor: 'rgba(255,255,255,0.5)',\n  labelColor: '#000000',\n  labelSize: 13,\n  labelAlign: 'center',\n  currentStepLabelColor: '#4aae4f',\n};\n\nconst StepIndicator = ({\n  currentPosition = 0,\n  stepCount = 5,\n  direction = 'horizontal',\n  customStyles: customStylesFromProps = defaultStyles,\n  labels = [],\n  onPress,\n  renderStepIndicator: renderCustomStepIndicator,\n  renderLabel,\n}: StepIndicatorProps) => {\n  const [width, setWidth] = React.useState<number>(0);\n  const [height, setHeight] = React.useState<number>(0);\n  const [progressBarSize, setProgressBarSize] = React.useState<number>(0);\n  const [customStyles, setCustomStyles] = React.useState<\n    DefaultStepIndicatorStyles\n  >({\n    ...defaultStyles,\n    ...customStylesFromProps,\n  });\n\n  const progressAnim = React.useRef(new Animated.Value(0)).current;\n  const sizeAnim = React.useRef(\n    new Animated.Value(customStyles.stepIndicatorSize)\n  ).current;\n  const staleSizeAnim = React.useRef(\n    new Animated.Value(customStyles.stepIndicatorSize)\n  ).current;\n  const borderRadiusAnim = React.useRef(\n    new Animated.Value(customStyles.stepIndicatorSize / 2)\n  ).current;\n\n  const stepPressed = (position: number) => {\n    if (onPress) {\n      onPress(position);\n    }\n  };\n\n  const effectCustomStyles = () => {\n    setCustomStyles({ ...customStyles, ...customStylesFromProps });\n  };\n  React.useEffect(effectCustomStyles, [customStylesFromProps]);\n\n  const effectCurrentPosition = () => {\n    onCurrentPositionChanged(currentPosition);\n  };\n  React.useEffect(effectCurrentPosition, [currentPosition, progressBarSize]);\n\n  const renderProgressBarBackground = () => {\n    let progressBarBackgroundStyle: ViewStyle = {\n      backgroundColor: customStyles.separatorUnFinishedColor,\n      position: 'absolute',\n    };\n    if (direction === 'vertical') {\n      progressBarBackgroundStyle = {\n        ...progressBarBackgroundStyle,\n        left: (width - customStyles.separatorStrokeWidth) / 2,\n        top: height / (2 * stepCount),\n        bottom: height / (2 * stepCount),\n        width:\n          customStyles.separatorStrokeUnfinishedWidth === 0\n            ? customStyles.separatorStrokeWidth\n            : customStyles.separatorStrokeUnfinishedWidth,\n      };\n    } else {\n      progressBarBackgroundStyle = {\n        ...progressBarBackgroundStyle,\n        top: (height - customStyles.separatorStrokeWidth) / 2,\n        left: width / (2 * stepCount),\n        right: width / (2 * stepCount),\n        height:\n          customStyles.separatorStrokeUnfinishedWidth === 0\n            ? customStyles.separatorStrokeWidth\n            : customStyles.separatorStrokeUnfinishedWidth,\n      };\n    }\n    return (\n      <View\n        onLayout={(event) => {\n          if (direction === 'vertical') {\n            setProgressBarSize(event.nativeEvent.layout.height);\n          } else {\n            setProgressBarSize(event.nativeEvent.layout.width);\n          }\n        }}\n        style={progressBarBackgroundStyle}\n      />\n    );\n  };\n\n  const renderProgressBar = () => {\n    let progressBarStyle: any = {\n      backgroundColor: customStyles.separatorFinishedColor,\n      position: 'absolute',\n    };\n    if (direction === 'vertical') {\n      progressBarStyle = {\n        ...progressBarStyle,\n        left: (width - customStyles.separatorStrokeWidth) / 2,\n        top: height / (2 * stepCount),\n        bottom: height / (2 * stepCount),\n        width:\n          customStyles.separatorStrokeFinishedWidth === 0\n            ? customStyles.separatorStrokeWidth\n            : customStyles.separatorStrokeFinishedWidth,\n        height: progressAnim,\n      };\n    } else {\n      progressBarStyle = {\n        ...progressBarStyle,\n        top: (height - customStyles.separatorStrokeWidth) / 2,\n        left: width / (2 * stepCount),\n        right: width / (2 * stepCount),\n        height:\n          customStyles.separatorStrokeFinishedWidth === 0\n            ? customStyles.separatorStrokeWidth\n            : customStyles.separatorStrokeFinishedWidth,\n        width: progressAnim,\n      };\n    }\n    return <Animated.View style={progressBarStyle} />;\n  };\n\n  const renderStepIndicator = () => {\n    let steps = [];\n    for (let position = 0; position < stepCount; position++) {\n      steps.push(\n        <TouchableWithoutFeedback\n          key={position}\n          onPress={() => stepPressed(position)}\n        >\n          <View\n            style={[\n              styles.stepContainer,\n              direction === 'vertical'\n                ? { flexDirection: 'column' }\n                : { flexDirection: 'row' },\n            ]}\n          >\n            {renderStep(position)}\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    }\n    return (\n      <View\n        onLayout={(event) => {\n          setWidth(event.nativeEvent.layout.width);\n          setHeight(event.nativeEvent.layout.height);\n        }}\n        style={[\n          styles.stepIndicatorContainer,\n          direction === 'vertical'\n            ? {\n                flexDirection: 'column',\n                width: customStyles.currentStepIndicatorSize,\n              }\n            : {\n                flexDirection: 'row',\n                height: customStyles.currentStepIndicatorSize,\n              },\n        ]}\n      >\n        {steps}\n      </View>\n    );\n  };\n\n  const renderStepLabels = () => {\n    if (!labels || labels.length === 0) {\n      return;\n    }\n    var labelViews = labels.map((label, index) => {\n      const selectedStepLabelStyle =\n        index === currentPosition\n          ? { color: customStyles.currentStepLabelColor }\n          : { color: customStyles.labelColor };\n      return (\n        <TouchableWithoutFeedback\n          style={styles.stepLabelItem}\n          key={index}\n          onPress={() => stepPressed(index)}\n        >\n          <View style={styles.stepLabelItem}>\n            {renderLabel ? (\n              renderLabel({\n                position: index,\n                stepStatus: getStepStatus(index),\n                label,\n                currentPosition,\n              })\n            ) : (\n              <Text\n                style={[\n                  styles.stepLabel,\n                  selectedStepLabelStyle,\n                  {\n                    fontSize: customStyles.labelSize,\n                    fontFamily: customStyles.labelFontFamily,\n                  },\n                ]}\n              >\n                {label}\n              </Text>\n            )}\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    });\n\n    return (\n      <View\n        style={[\n          styles.stepLabelsContainer,\n          direction === 'vertical'\n            ? { flexDirection: 'column', paddingHorizontal: 4 }\n            : { flexDirection: 'row', paddingVertical: 4 },\n          { alignItems: customStyles.labelAlign },\n        ]}\n      >\n        {labelViews}\n      </View>\n    );\n  };\n\n  const renderStep = (position: number) => {\n    let stepStyle;\n    let indicatorLabelStyle: TextStyle = {};\n    switch (getStepStatus(position)) {\n      case STEP_STATUS.CURRENT: {\n        stepStyle = {\n          backgroundColor: customStyles.stepIndicatorCurrentColor,\n          borderWidth: customStyles.currentStepStrokeWidth,\n          borderColor: customStyles.stepStrokeCurrentColor,\n          height: sizeAnim,\n          width: sizeAnim,\n          borderRadius: borderRadiusAnim,\n          overflow: 'hidden',\n        };\n        indicatorLabelStyle = {\n          overflow: 'hidden',\n          fontSize: customStyles.currentStepIndicatorLabelFontSize,\n          color: customStyles.stepIndicatorLabelCurrentColor,\n        };\n\n        break;\n      }\n      case STEP_STATUS.FINISHED: {\n        stepStyle = {\n          backgroundColor: customStyles.stepIndicatorFinishedColor,\n          borderWidth: customStyles.stepStrokeWidth,\n          borderColor: customStyles.stepStrokeFinishedColor,\n          height: staleSizeAnim,\n          width: staleSizeAnim,\n          borderRadius: customStyles.stepIndicatorSize / 2,\n          overflow: 'hidden',\n        };\n        indicatorLabelStyle = {\n          overflow: 'hidden',\n          fontSize: customStyles.stepIndicatorLabelFontSize,\n          color: customStyles.stepIndicatorLabelFinishedColor,\n        };\n        break;\n      }\n\n      case STEP_STATUS.UNFINISHED: {\n        stepStyle = {\n          backgroundColor: customStyles.stepIndicatorUnFinishedColor,\n          borderWidth: customStyles.stepStrokeWidth,\n          borderColor: customStyles.stepStrokeUnFinishedColor,\n          height: staleSizeAnim,\n          width: staleSizeAnim,\n          borderRadius: customStyles.stepIndicatorSize / 2,\n          overflow: 'hidden',\n        };\n        indicatorLabelStyle = {\n          overflow: 'hidden',\n          fontSize: customStyles.stepIndicatorLabelFontSize,\n          color: customStyles.stepIndicatorLabelUnFinishedColor,\n        };\n        break;\n      }\n      default:\n    }\n\n    return (\n      <Animated.View key={'step-indicator'} style={[styles.step, stepStyle]}>\n        {renderCustomStepIndicator ? (\n          renderCustomStepIndicator({\n            position,\n            stepStatus: getStepStatus(position),\n          })\n        ) : (\n          <Text style={indicatorLabelStyle}>{`${position + 1}`}</Text>\n        )}\n      </Animated.View>\n    );\n  };\n\n  const getStepStatus = (stepPosition: number) => {\n    if (stepPosition === currentPosition) {\n      return STEP_STATUS.CURRENT;\n    } else if (stepPosition < currentPosition) {\n      return STEP_STATUS.FINISHED;\n    } else {\n      return STEP_STATUS.UNFINISHED;\n    }\n  };\n\n  const onCurrentPositionChanged = (position: number) => {\n    if (position > stepCount - 1) {\n      position = stepCount - 1;\n    }\n    const animateToPosition = (progressBarSize / (stepCount - 1)) * position;\n    sizeAnim.setValue(customStyles.stepIndicatorSize);\n    staleSizeAnim.setValue(customStyles.stepIndicatorSize);\n    borderRadiusAnim.setValue(customStyles.stepIndicatorSize / 2);\n    Animated.sequence([\n      Animated.timing(progressAnim, {\n        toValue: isNaN(animateToPosition) ? 0 : animateToPosition,\n        duration: 200,\n        useNativeDriver: false,\n      }),\n      Animated.parallel([\n        Animated.timing(sizeAnim, {\n          toValue: customStyles.currentStepIndicatorSize,\n          duration: 100,\n          useNativeDriver: false,\n        }),\n        Animated.timing(borderRadiusAnim, {\n          toValue: customStyles.currentStepIndicatorSize / 2,\n          duration: 100,\n          useNativeDriver: false,\n        }),\n      ]),\n    ]).start();\n  };\n\n  return (\n    <View\n      style={[\n        styles.container,\n        direction === 'vertical'\n          ? { flexDirection: 'row', flex: 1 }\n          : { flexDirection: 'column' },\n      ]}\n    >\n      {width !== 0 && (\n        <React.Fragment>\n          {renderProgressBarBackground()}\n          {renderProgressBar()}\n        </React.Fragment>\n      )}\n      {renderStepIndicator()}\n      {labels && renderStepLabels()}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'rgba(1,0,0,0)',\n  },\n  stepIndicatorContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    backgroundColor: 'rgba(1,0,0,0)',\n  },\n  stepLabelsContainer: {\n    justifyContent: 'space-around',\n  },\n  step: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 2,\n  },\n  stepContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  stepLabel: {\n    fontSize: 12,\n    textAlign: 'center',\n    fontWeight: '500',\n  },\n  stepLabelItem: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default React.memo(StepIndicator);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}